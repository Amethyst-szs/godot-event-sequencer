@tool
extends EventItemBase

signal title_found

func get_name() -> String:
	return "Wait for Dialogue Title"

func get_description() -> String:
	return "Wait at this point until the dialogue reaches a specific title"

func is_allow_in_editor() -> bool:
	return true

func get_first_column_config() -> Dictionary:
	return {
		"name": "Title Name",
		"editable": true,
		"cell_mode": TreeItem.CELL_MODE_STRING
	}

func get_second_column_config() -> Dictionary:
	return {
		"name": "None",
		"editable": false,
		"cell_mode": TreeItem.CELL_MODE_STRING
	}

func get_color() -> Color:
	return Color.hex(0xBD93F9FF)

func get_icon_path() -> String:
	return "res://addons/event_sequence/plugin/dialogue/icon/WaitTitle.svg"

func run(event_node: EventNode) -> EventConst.ItemResponseType:
	if event_variable.is_empty():
		warn("No title set to wait for!")
		return EventConst.ItemResponseType.OK
	
	DialogueManager.passed_title.connect(_check_title)
	await title_found
	
	return EventConst.ItemResponseType.OK

func _check_title(title: String):
	if title.to_lower() != event_variable.to_lower():
		return
	
	if DialogueManager.passed_title.is_connected(_check_title):
		DialogueManager.passed_title.disconnect(_check_title)
	
	title_found.emit()
